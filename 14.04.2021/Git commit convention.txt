GIT COMMIT CONVENTION

* Format of the commit message: 
<type>(<scope>): <subject>

<body>

<footer>

example: 
fix(middleware): ensure Range headers adhere more closely to RFC 2616

Add one new dependency, use `range-parser` (Express dependency) to compute
range. It is more well-tested in the wild.

Fixes #2310

*Parts
- <types>
feat (new feature for the user, not a new feature for build script)
fix (bug fix for the user, not a fix to a build script)
docs (changes to the documentation)
style (formatting, missing semi colons, etc; no production code change)
refactor (refactoring production code, eg. renaming a variable)
test (adding missing tests, refactoring tests; no production code change)
chore (updating grunt tasks etc; no production code change)

- <scope>
init
runner
watcher
config
web-server
proxy
etc.
The <scope> can be empty (e.g. if the change is a global or difficult 
to assign to a single component), in which case the parentheses are omitted. 
In smaller projects such as Karma plugins, the <scope> is empty.


-message body 
uses the imperative, present tense: “change” not “changed” nor “changes”
includes motivation for the change and contrasts with previous behavior
For more info about message body, see:

http://365git.tumblr.com/post/3308646748/writing-git-commit-messages
http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html


- footer
ex: Closes #123, #245, #992